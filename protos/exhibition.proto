syntax = "proto3";

package protos;

import "protos/productGroup.proto";

option go_package = "github.com/lessbutter/alloff-grpc-protos/gen/golang/protos";

service Exhibition {
    rpc GetExhibition(GetExhibitionRequest) returns (GetExhibitionResponse);
    rpc ListExhibitions(ListExhibitionsRequest) returns (ListExhibitionsResponse);
    rpc EditExhibition(EditExhibitionRequest) returns (EditExhibitionResponse);
    rpc CreateExhibition(CreateExhibitionRequest) returns (CreateExhibitionResponse);
}

message GetExhibitionRequest {
    string exhibition_id = 1;
}

message ListExhibitionsRequest {
    int32 offset = 1;
    int32 limit = 2;
}

message EditExhibitionRequest {
    string exhibition_id = 1;
    optional string banner_image = 2;
    optional string thumbnail_image = 3;
    optional string title = 4;
    optional string subtitle = 5;
    optional string description = 6;
    optional string start_time = 7;
    optional string finish_time = 8;
    repeated string pg_ids = 9;
    optional bool is_live = 10;
}

message CreateExhibitionRequest {
    string banner_image = 1;
    string thumbnail_image = 2;
    string title = 3;
    string subtitle = 4;
    string description = 5;
    string start_time = 6;
    string finish_time = 7;
    repeated string pg_ids = 8;
}

message GetExhibitionResponse {
    ExhibitionMessage exhibition = 1;
}

message ListExhibitionsResponse {
    repeated ExhibitionMessage exhibitions = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total_counts = 4;
}

message EditExhibitionResponse {
    ExhibitionMessage exhibition = 1;
}

message CreateExhibitionResponse {
    ExhibitionMessage exhibition = 1;
}

message ExhibitionMessage {
    string exhibition_id = 1;
    string banner_image = 2;
    string thumbnail_image = 3;
    string title = 4;
    string subtitle = 5;
    string description = 6;
    string start_time = 7;
    string finish_time = 8;
    repeated ProductGroupMessage pgs = 9;
    bool is_live = 10;
}