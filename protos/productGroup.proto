syntax = "proto3";

package goalloff;
option go_package = "github.com/lessbutter/alloff-grpc-protos/gen/goalloff";

import "product.proto";
import "brand.proto";

service ProductGroup {
    rpc GetProductGroup(GetProductGroupRequest) returns (ProductGroupMessage);
    rpc CreateProductGroup(CreateProductGroupRequest) returns (ProductGroupMessage);
    rpc ListProductGroups(ListProductGroupsRequest) returns (ListProductGroupsResponse);
    rpc EditProductGroup(EditProductGroupRequest) returns (ProductGroupMessage);
    rpc PushProductsInProductGroup(ProductsInPgRequest) returns (ProductGroupMessage);
    rpc UpdateProductsInProductGroup(ProductsInPgRequest) returns (ProductGroupMessage);
    rpc RemoveProductInProductGroup(RemoveProductInPgRequest) returns (ProductGroupMessage);
}

/*
    GRPC API Request & Response
*/

// Product Group Service
message GetProductGroupRequest {
    string product_group_id = 1;
}

message CreateProductGroupRequest {
    string title = 1;
    optional string short_title = 2;
    repeated string instruction = 3;
    optional string image_url = 4;
    string start_time = 5;
    string finish_time = 6;
    ProductGroupType group_type = 7;
    optional string brand_id = 8;
}

message ListProductGroupsRequest {
    ProductGroupQuery query = 1;
    int32 offset = 2;
    int32 limit = 3;
}

message EditProductGroupRequest {
    optional string title = 1;
    optional string short_title = 2;
    repeated string instruction = 3;
    optional string image_url = 4;
    optional string start_time = 5;
    optional string finish_time = 6;
    string product_group_id = 7;
    optional ProductGroupType group_type = 9;
    optional string brand_id = 10;
}

message ProductsInPgRequest {
    string product_group_id = 1;
    repeated ProductPriorityMessage product_priorities = 2;
}

message RemoveProductInPgRequest {
    string product_group_id = 1;
    string product_id = 2;
}

message ProductGroupMessage {
    string title = 1;
    string short_title = 2;
    repeated string instruction = 3;
    string image_url = 4;
    repeated ProductInGroupMessage products = 5;
    string start_time = 6;
    string finish_time = 7;
    string product_group_id = 8;
    ProductGroupType group_type = 9;
    BrandMessage brand = 10;
}

message ListProductGroupsResponse {
    repeated ProductGroupMessage pgs = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total_counts = 4;
}

message ProductInGroupMessage {
    ProductMessage product = 1;
    int32 priority = 2;
}

message ProductPriorityMessage {
    string product_id = 1;
    int32 priority = 2;
}

enum ProductGroupType {
    PRODUCT_GROUP_TIMEDEAL = 0;
    PRODUCT_GROUP_EXHIBITION = 1;
    PRODUCT_GROUP_GROUPDEAL = 2;
    PRODUCT_GROUP_BRAND_TIMEDEAL = 3;
}

message ProductGroupQuery {
    optional string search_query = 1;
    optional ProductGroupType group_type = 2;
}