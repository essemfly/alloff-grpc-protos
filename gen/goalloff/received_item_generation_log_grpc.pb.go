// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: received_item_generation_log.proto

package goalloff

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ReceivedItemGenerationLogControllerClient is the client API for ReceivedItemGenerationLogController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ReceivedItemGenerationLogControllerClient interface {
	List(ctx context.Context, in *ReceivedItemGenerationLogListRequest, opts ...grpc.CallOption) (ReceivedItemGenerationLogController_ListClient, error)
	Create(ctx context.Context, in *ReceivedItemGenerationLog, opts ...grpc.CallOption) (*ReceivedItemGenerationLog, error)
	Retrieve(ctx context.Context, in *ReceivedItemGenerationLogRetrieveRequest, opts ...grpc.CallOption) (*ReceivedItemGenerationLog, error)
	Update(ctx context.Context, in *ReceivedItemGenerationLog, opts ...grpc.CallOption) (*ReceivedItemGenerationLog, error)
	Destroy(ctx context.Context, in *ReceivedItemGenerationLog, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type receivedItemGenerationLogControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewReceivedItemGenerationLogControllerClient(cc grpc.ClientConnInterface) ReceivedItemGenerationLogControllerClient {
	return &receivedItemGenerationLogControllerClient{cc}
}

func (c *receivedItemGenerationLogControllerClient) List(ctx context.Context, in *ReceivedItemGenerationLogListRequest, opts ...grpc.CallOption) (ReceivedItemGenerationLogController_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &ReceivedItemGenerationLogController_ServiceDesc.Streams[0], "/receiveditemgenerationlog.ReceivedItemGenerationLogController/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &receivedItemGenerationLogControllerListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReceivedItemGenerationLogController_ListClient interface {
	Recv() (*ReceivedItemGenerationLog, error)
	grpc.ClientStream
}

type receivedItemGenerationLogControllerListClient struct {
	grpc.ClientStream
}

func (x *receivedItemGenerationLogControllerListClient) Recv() (*ReceivedItemGenerationLog, error) {
	m := new(ReceivedItemGenerationLog)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *receivedItemGenerationLogControllerClient) Create(ctx context.Context, in *ReceivedItemGenerationLog, opts ...grpc.CallOption) (*ReceivedItemGenerationLog, error) {
	out := new(ReceivedItemGenerationLog)
	err := c.cc.Invoke(ctx, "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receivedItemGenerationLogControllerClient) Retrieve(ctx context.Context, in *ReceivedItemGenerationLogRetrieveRequest, opts ...grpc.CallOption) (*ReceivedItemGenerationLog, error) {
	out := new(ReceivedItemGenerationLog)
	err := c.cc.Invoke(ctx, "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receivedItemGenerationLogControllerClient) Update(ctx context.Context, in *ReceivedItemGenerationLog, opts ...grpc.CallOption) (*ReceivedItemGenerationLog, error) {
	out := new(ReceivedItemGenerationLog)
	err := c.cc.Invoke(ctx, "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receivedItemGenerationLogControllerClient) Destroy(ctx context.Context, in *ReceivedItemGenerationLog, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Destroy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReceivedItemGenerationLogControllerServer is the server API for ReceivedItemGenerationLogController service.
// All implementations must embed UnimplementedReceivedItemGenerationLogControllerServer
// for forward compatibility
type ReceivedItemGenerationLogControllerServer interface {
	List(*ReceivedItemGenerationLogListRequest, ReceivedItemGenerationLogController_ListServer) error
	Create(context.Context, *ReceivedItemGenerationLog) (*ReceivedItemGenerationLog, error)
	Retrieve(context.Context, *ReceivedItemGenerationLogRetrieveRequest) (*ReceivedItemGenerationLog, error)
	Update(context.Context, *ReceivedItemGenerationLog) (*ReceivedItemGenerationLog, error)
	Destroy(context.Context, *ReceivedItemGenerationLog) (*emptypb.Empty, error)
	mustEmbedUnimplementedReceivedItemGenerationLogControllerServer()
}

// UnimplementedReceivedItemGenerationLogControllerServer must be embedded to have forward compatible implementations.
type UnimplementedReceivedItemGenerationLogControllerServer struct {
}

func (UnimplementedReceivedItemGenerationLogControllerServer) List(*ReceivedItemGenerationLogListRequest, ReceivedItemGenerationLogController_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedReceivedItemGenerationLogControllerServer) Create(context.Context, *ReceivedItemGenerationLog) (*ReceivedItemGenerationLog, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedReceivedItemGenerationLogControllerServer) Retrieve(context.Context, *ReceivedItemGenerationLogRetrieveRequest) (*ReceivedItemGenerationLog, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedReceivedItemGenerationLogControllerServer) Update(context.Context, *ReceivedItemGenerationLog) (*ReceivedItemGenerationLog, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedReceivedItemGenerationLogControllerServer) Destroy(context.Context, *ReceivedItemGenerationLog) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedReceivedItemGenerationLogControllerServer) mustEmbedUnimplementedReceivedItemGenerationLogControllerServer() {
}

// UnsafeReceivedItemGenerationLogControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ReceivedItemGenerationLogControllerServer will
// result in compilation errors.
type UnsafeReceivedItemGenerationLogControllerServer interface {
	mustEmbedUnimplementedReceivedItemGenerationLogControllerServer()
}

func RegisterReceivedItemGenerationLogControllerServer(s grpc.ServiceRegistrar, srv ReceivedItemGenerationLogControllerServer) {
	s.RegisterService(&ReceivedItemGenerationLogController_ServiceDesc, srv)
}

func _ReceivedItemGenerationLogController_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReceivedItemGenerationLogListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReceivedItemGenerationLogControllerServer).List(m, &receivedItemGenerationLogControllerListServer{stream})
}

type ReceivedItemGenerationLogController_ListServer interface {
	Send(*ReceivedItemGenerationLog) error
	grpc.ServerStream
}

type receivedItemGenerationLogControllerListServer struct {
	grpc.ServerStream
}

func (x *receivedItemGenerationLogControllerListServer) Send(m *ReceivedItemGenerationLog) error {
	return x.ServerStream.SendMsg(m)
}

func _ReceivedItemGenerationLogController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedItemGenerationLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceivedItemGenerationLogControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceivedItemGenerationLogControllerServer).Create(ctx, req.(*ReceivedItemGenerationLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceivedItemGenerationLogController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedItemGenerationLogRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceivedItemGenerationLogControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceivedItemGenerationLogControllerServer).Retrieve(ctx, req.(*ReceivedItemGenerationLogRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceivedItemGenerationLogController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedItemGenerationLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceivedItemGenerationLogControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceivedItemGenerationLogControllerServer).Update(ctx, req.(*ReceivedItemGenerationLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceivedItemGenerationLogController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedItemGenerationLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceivedItemGenerationLogControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/receiveditemgenerationlog.ReceivedItemGenerationLogController/Destroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceivedItemGenerationLogControllerServer).Destroy(ctx, req.(*ReceivedItemGenerationLog))
	}
	return interceptor(ctx, in, info, handler)
}

// ReceivedItemGenerationLogController_ServiceDesc is the grpc.ServiceDesc for ReceivedItemGenerationLogController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ReceivedItemGenerationLogController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "receiveditemgenerationlog.ReceivedItemGenerationLogController",
	HandlerType: (*ReceivedItemGenerationLogControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ReceivedItemGenerationLogController_Create_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _ReceivedItemGenerationLogController_Retrieve_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ReceivedItemGenerationLogController_Update_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _ReceivedItemGenerationLogController_Destroy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ReceivedItemGenerationLogController_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "received_item_generation_log.proto",
}
