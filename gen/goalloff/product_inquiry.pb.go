// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: product_inquiry.proto

package goalloff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductInquiryListStatus int32

const (
	ProductInquiryListStatus_ALL     ProductInquiryListStatus = 0
	ProductInquiryListStatus_PENDING ProductInquiryListStatus = 1
	ProductInquiryListStatus_REPLIED ProductInquiryListStatus = 2
)

// Enum value maps for ProductInquiryListStatus.
var (
	ProductInquiryListStatus_name = map[int32]string{
		0: "ALL",
		1: "PENDING",
		2: "REPLIED",
	}
	ProductInquiryListStatus_value = map[string]int32{
		"ALL":     0,
		"PENDING": 1,
		"REPLIED": 2,
	}
)

func (x ProductInquiryListStatus) Enum() *ProductInquiryListStatus {
	p := new(ProductInquiryListStatus)
	*p = x
	return p
}

func (x ProductInquiryListStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductInquiryListStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_product_inquiry_proto_enumTypes[0].Descriptor()
}

func (ProductInquiryListStatus) Type() protoreflect.EnumType {
	return &file_product_inquiry_proto_enumTypes[0]
}

func (x ProductInquiryListStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductInquiryListStatus.Descriptor instead.
func (ProductInquiryListStatus) EnumDescriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{0}
}

type ProductInquiry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId      string                 `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	BrandKeyname   string                 `protobuf:"bytes,3,opt,name=brand_keyname,json=brandKeyname,proto3" json:"brand_keyname,omitempty"`
	CompanyKeyname string                 `protobuf:"bytes,4,opt,name=company_keyname,json=companyKeyname,proto3" json:"company_keyname,omitempty"`
	UserId         string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName       string                 `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Body           string                 `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Replies        []*ProductInquiryReply `protobuf:"bytes,9,rep,name=replies,proto3" json:"replies,omitempty"`
	IsPending      bool                   `protobuf:"varint,10,opt,name=is_pending,json=isPending,proto3" json:"is_pending,omitempty"`
}

func (x *ProductInquiry) Reset() {
	*x = ProductInquiry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_inquiry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInquiry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInquiry) ProtoMessage() {}

func (x *ProductInquiry) ProtoReflect() protoreflect.Message {
	mi := &file_product_inquiry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInquiry.ProtoReflect.Descriptor instead.
func (*ProductInquiry) Descriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{0}
}

func (x *ProductInquiry) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInquiry) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductInquiry) GetBrandKeyname() string {
	if x != nil {
		return x.BrandKeyname
	}
	return ""
}

func (x *ProductInquiry) GetCompanyKeyname() string {
	if x != nil {
		return x.CompanyKeyname
	}
	return ""
}

func (x *ProductInquiry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProductInquiry) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ProductInquiry) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ProductInquiry) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductInquiry) GetReplies() []*ProductInquiryReply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *ProductInquiry) GetIsPending() bool {
	if x != nil {
		return x.IsPending
	}
	return false
}

type ProductInquiryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64                    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size           int64                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Search         *string                  `protobuf:"bytes,3,opt,name=search,proto3,oneof" json:"search,omitempty"`
	Status         ProductInquiryListStatus `protobuf:"varint,4,opt,name=status,proto3,enum=productinquiry.ProductInquiryListStatus" json:"status,omitempty"`
	CompanyKeyname string                   `protobuf:"bytes,5,opt,name=company_keyname,json=companyKeyname,proto3" json:"company_keyname,omitempty"`
	DateFrom       *string                  `protobuf:"bytes,6,opt,name=date_from,json=dateFrom,proto3,oneof" json:"date_from,omitempty"`
	DateTo         *string                  `protobuf:"bytes,7,opt,name=date_to,json=dateTo,proto3,oneof" json:"date_to,omitempty"`
}

func (x *ProductInquiryListRequest) Reset() {
	*x = ProductInquiryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_inquiry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInquiryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInquiryListRequest) ProtoMessage() {}

func (x *ProductInquiryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_inquiry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInquiryListRequest.ProtoReflect.Descriptor instead.
func (*ProductInquiryListRequest) Descriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{1}
}

func (x *ProductInquiryListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductInquiryListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ProductInquiryListRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *ProductInquiryListRequest) GetStatus() ProductInquiryListStatus {
	if x != nil {
		return x.Status
	}
	return ProductInquiryListStatus_ALL
}

func (x *ProductInquiryListRequest) GetCompanyKeyname() string {
	if x != nil {
		return x.CompanyKeyname
	}
	return ""
}

func (x *ProductInquiryListRequest) GetDateFrom() string {
	if x != nil && x.DateFrom != nil {
		return *x.DateFrom
	}
	return ""
}

func (x *ProductInquiryListRequest) GetDateTo() string {
	if x != nil && x.DateTo != nil {
		return *x.DateTo
	}
	return ""
}

type ProductInquiryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Next     *int64            `protobuf:"varint,2,opt,name=next,proto3,oneof" json:"next,omitempty"`
	Previous *int64            `protobuf:"varint,3,opt,name=previous,proto3,oneof" json:"previous,omitempty"`
	Results  []*ProductInquiry `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ProductInquiryListResponse) Reset() {
	*x = ProductInquiryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_inquiry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInquiryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInquiryListResponse) ProtoMessage() {}

func (x *ProductInquiryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_inquiry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInquiryListResponse.ProtoReflect.Descriptor instead.
func (*ProductInquiryListResponse) Descriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{2}
}

func (x *ProductInquiryListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductInquiryListResponse) GetNext() int64 {
	if x != nil && x.Next != nil {
		return *x.Next
	}
	return 0
}

func (x *ProductInquiryListResponse) GetPrevious() int64 {
	if x != nil && x.Previous != nil {
		return *x.Previous
	}
	return 0
}

func (x *ProductInquiryListResponse) GetResults() []*ProductInquiry {
	if x != nil {
		return x.Results
	}
	return nil
}

type ProductInquiryRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyKeyname string `protobuf:"bytes,2,opt,name=company_keyname,json=companyKeyname,proto3" json:"company_keyname,omitempty"`
}

func (x *ProductInquiryRetrieveRequest) Reset() {
	*x = ProductInquiryRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_inquiry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInquiryRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInquiryRetrieveRequest) ProtoMessage() {}

func (x *ProductInquiryRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_inquiry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInquiryRetrieveRequest.ProtoReflect.Descriptor instead.
func (*ProductInquiryRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{3}
}

func (x *ProductInquiryRetrieveRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInquiryRetrieveRequest) GetCompanyKeyname() string {
	if x != nil {
		return x.CompanyKeyname
	}
	return ""
}

type ProductInquiryReplyCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Body           string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	UserUsername   string `protobuf:"bytes,3,opt,name=user_username,json=userUsername,proto3" json:"user_username,omitempty"`
	UserUuid       string `protobuf:"bytes,4,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	CompanyKeyname string `protobuf:"bytes,5,opt,name=company_keyname,json=companyKeyname,proto3" json:"company_keyname,omitempty"`
}

func (x *ProductInquiryReplyCreateRequest) Reset() {
	*x = ProductInquiryReplyCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_inquiry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInquiryReplyCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInquiryReplyCreateRequest) ProtoMessage() {}

func (x *ProductInquiryReplyCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_inquiry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInquiryReplyCreateRequest.ProtoReflect.Descriptor instead.
func (*ProductInquiryReplyCreateRequest) Descriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{4}
}

func (x *ProductInquiryReplyCreateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInquiryReplyCreateRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ProductInquiryReplyCreateRequest) GetUserUsername() string {
	if x != nil {
		return x.UserUsername
	}
	return ""
}

func (x *ProductInquiryReplyCreateRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ProductInquiryReplyCreateRequest) GetCompanyKeyname() string {
	if x != nil {
		return x.CompanyKeyname
	}
	return ""
}

type ProductInquiryReplyDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyKeyname string `protobuf:"bytes,2,opt,name=company_keyname,json=companyKeyname,proto3" json:"company_keyname,omitempty"`
}

func (x *ProductInquiryReplyDestroyRequest) Reset() {
	*x = ProductInquiryReplyDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_inquiry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInquiryReplyDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInquiryReplyDestroyRequest) ProtoMessage() {}

func (x *ProductInquiryReplyDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_inquiry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInquiryReplyDestroyRequest.ProtoReflect.Descriptor instead.
func (*ProductInquiryReplyDestroyRequest) Descriptor() ([]byte, []int) {
	return file_product_inquiry_proto_rawDescGZIP(), []int{5}
}

func (x *ProductInquiryReplyDestroyRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInquiryReplyDestroyRequest) GetCompanyKeyname() string {
	if x != nil {
		return x.CompanyKeyname
	}
	return ""
}

var File_product_inquiry_proto protoreflect.FileDescriptor

var file_product_inquiry_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd9, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xb0, 0x02,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f,
	0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x65,
	0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x22,
	0x58, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x20, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a,
	0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x3d, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x10, 0x02, 0x32, 0x97, 0x03, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x62, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x66, 0x66, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_inquiry_proto_rawDescOnce sync.Once
	file_product_inquiry_proto_rawDescData = file_product_inquiry_proto_rawDesc
)

func file_product_inquiry_proto_rawDescGZIP() []byte {
	file_product_inquiry_proto_rawDescOnce.Do(func() {
		file_product_inquiry_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_inquiry_proto_rawDescData)
	})
	return file_product_inquiry_proto_rawDescData
}

var file_product_inquiry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_product_inquiry_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_product_inquiry_proto_goTypes = []interface{}{
	(ProductInquiryListStatus)(0),             // 0: productinquiry.ProductInquiryListStatus
	(*ProductInquiry)(nil),                    // 1: productinquiry.ProductInquiry
	(*ProductInquiryListRequest)(nil),         // 2: productinquiry.ProductInquiryListRequest
	(*ProductInquiryListResponse)(nil),        // 3: productinquiry.ProductInquiryListResponse
	(*ProductInquiryRetrieveRequest)(nil),     // 4: productinquiry.ProductInquiryRetrieveRequest
	(*ProductInquiryReplyCreateRequest)(nil),  // 5: productinquiry.ProductInquiryReplyCreateRequest
	(*ProductInquiryReplyDestroyRequest)(nil), // 6: productinquiry.ProductInquiryReplyDestroyRequest
	(*ProductInquiryReply)(nil),               // 7: productinquiryreply.ProductInquiryReply
	(*emptypb.Empty)(nil),                     // 8: google.protobuf.Empty
}
var file_product_inquiry_proto_depIdxs = []int32{
	7, // 0: productinquiry.ProductInquiry.replies:type_name -> productinquiryreply.ProductInquiryReply
	0, // 1: productinquiry.ProductInquiryListRequest.status:type_name -> productinquiry.ProductInquiryListStatus
	1, // 2: productinquiry.ProductInquiryListResponse.results:type_name -> productinquiry.ProductInquiry
	2, // 3: productinquiry.ProductInquiryController.List:input_type -> productinquiry.ProductInquiryListRequest
	4, // 4: productinquiry.ProductInquiryController.Retrieve:input_type -> productinquiry.ProductInquiryRetrieveRequest
	5, // 5: productinquiry.ProductInquiryController.CreateReply:input_type -> productinquiry.ProductInquiryReplyCreateRequest
	6, // 6: productinquiry.ProductInquiryController.DeleteReply:input_type -> productinquiry.ProductInquiryReplyDestroyRequest
	3, // 7: productinquiry.ProductInquiryController.List:output_type -> productinquiry.ProductInquiryListResponse
	1, // 8: productinquiry.ProductInquiryController.Retrieve:output_type -> productinquiry.ProductInquiry
	1, // 9: productinquiry.ProductInquiryController.CreateReply:output_type -> productinquiry.ProductInquiry
	8, // 10: productinquiry.ProductInquiryController.DeleteReply:output_type -> google.protobuf.Empty
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_product_inquiry_proto_init() }
func file_product_inquiry_proto_init() {
	if File_product_inquiry_proto != nil {
		return
	}
	file_product_inquiry_reply_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_inquiry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInquiry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_inquiry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInquiryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_inquiry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInquiryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_inquiry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInquiryRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_inquiry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInquiryReplyCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_inquiry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInquiryReplyDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_product_inquiry_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_product_inquiry_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_inquiry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_inquiry_proto_goTypes,
		DependencyIndexes: file_product_inquiry_proto_depIdxs,
		EnumInfos:         file_product_inquiry_proto_enumTypes,
		MessageInfos:      file_product_inquiry_proto_msgTypes,
	}.Build()
	File_product_inquiry_proto = out.File
	file_product_inquiry_proto_rawDesc = nil
	file_product_inquiry_proto_goTypes = nil
	file_product_inquiry_proto_depIdxs = nil
}
