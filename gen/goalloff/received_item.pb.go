// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: received_item.proto

package goalloff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReceivedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId      int64      `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OrderItem    *OrderItem `protobuf:"bytes,3,opt,name=order_item,json=orderItem,proto3" json:"order_item,omitempty"`
	Code         string     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Status       string     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ProductId    string     `protobuf:"bytes,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName  string     `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductImg   string     `protobuf:"bytes,8,opt,name=product_img,json=productImg,proto3" json:"product_img,omitempty"`
	BrandKorname string     `protobuf:"bytes,9,opt,name=brand_korname,json=brandKorname,proto3" json:"brand_korname,omitempty"`
	BrandKeyname string     `protobuf:"bytes,10,opt,name=brand_keyname,json=brandKeyname,proto3" json:"brand_keyname,omitempty"`
	Size         string     `protobuf:"bytes,11,opt,name=size,proto3" json:"size,omitempty"`
	Color        *string    `protobuf:"bytes,12,opt,name=color,proto3,oneof" json:"color,omitempty"`
	CreatedAt    string     `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string     `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt    *string    `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	Inventory    *Inventory `protobuf:"bytes,16,opt,name=inventory,proto3,oneof" json:"inventory,omitempty"`
}

func (x *ReceivedItem) Reset() {
	*x = ReceivedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_received_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedItem) ProtoMessage() {}

func (x *ReceivedItem) ProtoReflect() protoreflect.Message {
	mi := &file_received_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedItem.ProtoReflect.Descriptor instead.
func (*ReceivedItem) Descriptor() ([]byte, []int) {
	return file_received_item_proto_rawDescGZIP(), []int{0}
}

func (x *ReceivedItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReceivedItem) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ReceivedItem) GetOrderItem() *OrderItem {
	if x != nil {
		return x.OrderItem
	}
	return nil
}

func (x *ReceivedItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReceivedItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReceivedItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ReceivedItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ReceivedItem) GetProductImg() string {
	if x != nil {
		return x.ProductImg
	}
	return ""
}

func (x *ReceivedItem) GetBrandKorname() string {
	if x != nil {
		return x.BrandKorname
	}
	return ""
}

func (x *ReceivedItem) GetBrandKeyname() string {
	if x != nil {
		return x.BrandKeyname
	}
	return ""
}

func (x *ReceivedItem) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ReceivedItem) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *ReceivedItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ReceivedItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ReceivedItem) GetDeletedAt() string {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return ""
}

func (x *ReceivedItem) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type ReceivedItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size     int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Search   *string  `protobuf:"bytes,3,opt,name=search,proto3,oneof" json:"search,omitempty"`
	Statuses []string `protobuf:"bytes,4,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *ReceivedItemListRequest) Reset() {
	*x = ReceivedItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_received_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedItemListRequest) ProtoMessage() {}

func (x *ReceivedItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_received_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedItemListRequest.ProtoReflect.Descriptor instead.
func (*ReceivedItemListRequest) Descriptor() ([]byte, []int) {
	return file_received_item_proto_rawDescGZIP(), []int{1}
}

func (x *ReceivedItemListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReceivedItemListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReceivedItemListRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *ReceivedItemListRequest) GetStatuses() []string {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type ReceivedItemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64           `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Next     *int64          `protobuf:"varint,2,opt,name=next,proto3,oneof" json:"next,omitempty"`
	Previous *int64          `protobuf:"varint,3,opt,name=previous,proto3,oneof" json:"previous,omitempty"`
	Results  []*ReceivedItem `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ReceivedItemListResponse) Reset() {
	*x = ReceivedItemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_received_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedItemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedItemListResponse) ProtoMessage() {}

func (x *ReceivedItemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_received_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedItemListResponse.ProtoReflect.Descriptor instead.
func (*ReceivedItemListResponse) Descriptor() ([]byte, []int) {
	return file_received_item_proto_rawDescGZIP(), []int{2}
}

func (x *ReceivedItemListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReceivedItemListResponse) GetNext() int64 {
	if x != nil && x.Next != nil {
		return *x.Next
	}
	return 0
}

func (x *ReceivedItemListResponse) GetPrevious() int64 {
	if x != nil && x.Previous != nil {
		return *x.Previous
	}
	return 0
}

func (x *ReceivedItemListResponse) GetResults() []*ReceivedItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReceivedItemRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReceivedItemRetrieveRequest) Reset() {
	*x = ReceivedItemRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_received_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedItemRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedItemRetrieveRequest) ProtoMessage() {}

func (x *ReceivedItemRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_received_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedItemRetrieveRequest.ProtoReflect.Descriptor instead.
func (*ReceivedItemRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_received_item_proto_rawDescGZIP(), []int{3}
}

func (x *ReceivedItemRetrieveRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReceivedItemReceiveRevertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserUuid     string `protobuf:"bytes,2,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	UserUsername string `protobuf:"bytes,3,opt,name=user_username,json=userUsername,proto3" json:"user_username,omitempty"`
}

func (x *ReceivedItemReceiveRevertRequest) Reset() {
	*x = ReceivedItemReceiveRevertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_received_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedItemReceiveRevertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedItemReceiveRevertRequest) ProtoMessage() {}

func (x *ReceivedItemReceiveRevertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_received_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedItemReceiveRevertRequest.ProtoReflect.Descriptor instead.
func (*ReceivedItemReceiveRevertRequest) Descriptor() ([]byte, []int) {
	return file_received_item_proto_rawDescGZIP(), []int{4}
}

func (x *ReceivedItemReceiveRevertRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReceivedItemReceiveRevertRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ReceivedItemReceiveRevertRequest) GetUserUsername() string {
	if x != nil {
		return x.UserUsername
	}
	return ""
}

var File_received_item_proto protoreflect.FileDescriptor

var file_received_item_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x04, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x6d, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6d, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6b, 0x6f,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4b, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x37, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x85, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x74, 0x0a, 0x20, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa7, 0x05, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x12, 0x59, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x2a,
	0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x2f, 0x2e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x06,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x2f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x12, 0x2f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00,
	0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x65, 0x73, 0x73, 0x62, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_received_item_proto_rawDescOnce sync.Once
	file_received_item_proto_rawDescData = file_received_item_proto_rawDesc
)

func file_received_item_proto_rawDescGZIP() []byte {
	file_received_item_proto_rawDescOnce.Do(func() {
		file_received_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_received_item_proto_rawDescData)
	})
	return file_received_item_proto_rawDescData
}

var file_received_item_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_received_item_proto_goTypes = []interface{}{
	(*ReceivedItem)(nil),                     // 0: received_item.ReceivedItem
	(*ReceivedItemListRequest)(nil),          // 1: received_item.ReceivedItemListRequest
	(*ReceivedItemListResponse)(nil),         // 2: received_item.ReceivedItemListResponse
	(*ReceivedItemRetrieveRequest)(nil),      // 3: received_item.ReceivedItemRetrieveRequest
	(*ReceivedItemReceiveRevertRequest)(nil), // 4: received_item.ReceivedItemReceiveRevertRequest
	(*OrderItem)(nil),                        // 5: orderitem.OrderItem
	(*Inventory)(nil),                        // 6: inventory.Inventory
	(*emptypb.Empty)(nil),                    // 7: google.protobuf.Empty
}
var file_received_item_proto_depIdxs = []int32{
	5,  // 0: received_item.ReceivedItem.order_item:type_name -> orderitem.OrderItem
	6,  // 1: received_item.ReceivedItem.inventory:type_name -> inventory.Inventory
	0,  // 2: received_item.ReceivedItemListResponse.results:type_name -> received_item.ReceivedItem
	1,  // 3: received_item.ReceivedItemController.List:input_type -> received_item.ReceivedItemListRequest
	0,  // 4: received_item.ReceivedItemController.Create:input_type -> received_item.ReceivedItem
	3,  // 5: received_item.ReceivedItemController.Retrieve:input_type -> received_item.ReceivedItemRetrieveRequest
	0,  // 6: received_item.ReceivedItemController.Update:input_type -> received_item.ReceivedItem
	0,  // 7: received_item.ReceivedItemController.Destroy:input_type -> received_item.ReceivedItem
	4,  // 8: received_item.ReceivedItemController.Receive:input_type -> received_item.ReceivedItemReceiveRevertRequest
	4,  // 9: received_item.ReceivedItemController.Cancel:input_type -> received_item.ReceivedItemReceiveRevertRequest
	4,  // 10: received_item.ReceivedItemController.Revert:input_type -> received_item.ReceivedItemReceiveRevertRequest
	2,  // 11: received_item.ReceivedItemController.List:output_type -> received_item.ReceivedItemListResponse
	0,  // 12: received_item.ReceivedItemController.Create:output_type -> received_item.ReceivedItem
	0,  // 13: received_item.ReceivedItemController.Retrieve:output_type -> received_item.ReceivedItem
	0,  // 14: received_item.ReceivedItemController.Update:output_type -> received_item.ReceivedItem
	7,  // 15: received_item.ReceivedItemController.Destroy:output_type -> google.protobuf.Empty
	0,  // 16: received_item.ReceivedItemController.Receive:output_type -> received_item.ReceivedItem
	0,  // 17: received_item.ReceivedItemController.Cancel:output_type -> received_item.ReceivedItem
	0,  // 18: received_item.ReceivedItemController.Revert:output_type -> received_item.ReceivedItem
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_received_item_proto_init() }
func file_received_item_proto_init() {
	if File_received_item_proto != nil {
		return
	}
	file_inventory_proto_init()
	file_order_item_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_received_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_received_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_received_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedItemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_received_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedItemRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_received_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedItemReceiveRevertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_received_item_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_received_item_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_received_item_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_received_item_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_received_item_proto_goTypes,
		DependencyIndexes: file_received_item_proto_depIdxs,
		MessageInfos:      file_received_item_proto_msgTypes,
	}.Build()
	File_received_item_proto = out.File
	file_received_item_proto_rawDesc = nil
	file_received_item_proto_goTypes = nil
	file_received_item_proto_depIdxs = nil
}
