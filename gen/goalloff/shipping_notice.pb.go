// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: shipping_notice.proto

package goalloff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShippingNoticeStatus int32

const (
	ShippingNoticeStatus_CREATED ShippingNoticeStatus = 0
	ShippingNoticeStatus_LOCKED  ShippingNoticeStatus = 1
	ShippingNoticeStatus_SEALED  ShippingNoticeStatus = 2
	ShippingNoticeStatus_SHIPPED ShippingNoticeStatus = 3
)

// Enum value maps for ShippingNoticeStatus.
var (
	ShippingNoticeStatus_name = map[int32]string{
		0: "CREATED",
		1: "LOCKED",
		2: "SEALED",
		3: "SHIPPED",
	}
	ShippingNoticeStatus_value = map[string]int32{
		"CREATED": 0,
		"LOCKED":  1,
		"SEALED":  2,
		"SHIPPED": 3,
	}
)

func (x ShippingNoticeStatus) Enum() *ShippingNoticeStatus {
	p := new(ShippingNoticeStatus)
	*p = x
	return p
}

func (x ShippingNoticeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShippingNoticeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_shipping_notice_proto_enumTypes[0].Descriptor()
}

func (ShippingNoticeStatus) Type() protoreflect.EnumType {
	return &file_shipping_notice_proto_enumTypes[0]
}

func (x ShippingNoticeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShippingNoticeStatus.Descriptor instead.
func (ShippingNoticeStatus) EnumDescriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{0}
}

type ShippingNoticeItemRemovalType int32

const (
	ShippingNoticeItemRemovalType_REMOVE_AND_RESET ShippingNoticeItemRemovalType = 0
	ShippingNoticeItemRemovalType_SPLIT_PACKAGE    ShippingNoticeItemRemovalType = 1
	ShippingNoticeItemRemovalType_SPLIT_NOTICE     ShippingNoticeItemRemovalType = 2
)

// Enum value maps for ShippingNoticeItemRemovalType.
var (
	ShippingNoticeItemRemovalType_name = map[int32]string{
		0: "REMOVE_AND_RESET",
		1: "SPLIT_PACKAGE",
		2: "SPLIT_NOTICE",
	}
	ShippingNoticeItemRemovalType_value = map[string]int32{
		"REMOVE_AND_RESET": 0,
		"SPLIT_PACKAGE":    1,
		"SPLIT_NOTICE":     2,
	}
)

func (x ShippingNoticeItemRemovalType) Enum() *ShippingNoticeItemRemovalType {
	p := new(ShippingNoticeItemRemovalType)
	*p = x
	return p
}

func (x ShippingNoticeItemRemovalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShippingNoticeItemRemovalType) Descriptor() protoreflect.EnumDescriptor {
	return file_shipping_notice_proto_enumTypes[1].Descriptor()
}

func (ShippingNoticeItemRemovalType) Type() protoreflect.EnumType {
	return &file_shipping_notice_proto_enumTypes[1]
}

func (x ShippingNoticeItemRemovalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShippingNoticeItemRemovalType.Descriptor instead.
func (ShippingNoticeItemRemovalType) EnumDescriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{1}
}

type ShippingNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string                `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Status      string                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	TemplateUrl *string               `protobuf:"bytes,4,opt,name=template_url,json=templateUrl,proto3,oneof" json:"template_url,omitempty"`
	LockedAt    *string               `protobuf:"bytes,5,opt,name=locked_at,json=lockedAt,proto3,oneof" json:"locked_at,omitempty"`
	SealedAt    *string               `protobuf:"bytes,6,opt,name=sealed_at,json=sealedAt,proto3,oneof" json:"sealed_at,omitempty"`
	ShippedAt   *string               `protobuf:"bytes,7,opt,name=shipped_at,json=shippedAt,proto3,oneof" json:"shipped_at,omitempty"`
	CreatedAt   string                `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string                `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Items       []*ShippingNoticeItem `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	Packages    []*Package            `protobuf:"bytes,11,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *ShippingNotice) Reset() {
	*x = ShippingNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNotice) ProtoMessage() {}

func (x *ShippingNotice) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNotice.ProtoReflect.Descriptor instead.
func (*ShippingNotice) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{0}
}

func (x *ShippingNotice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShippingNotice) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShippingNotice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ShippingNotice) GetTemplateUrl() string {
	if x != nil && x.TemplateUrl != nil {
		return *x.TemplateUrl
	}
	return ""
}

func (x *ShippingNotice) GetLockedAt() string {
	if x != nil && x.LockedAt != nil {
		return *x.LockedAt
	}
	return ""
}

func (x *ShippingNotice) GetSealedAt() string {
	if x != nil && x.SealedAt != nil {
		return *x.SealedAt
	}
	return ""
}

func (x *ShippingNotice) GetShippedAt() string {
	if x != nil && x.ShippedAt != nil {
		return *x.ShippedAt
	}
	return ""
}

func (x *ShippingNotice) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ShippingNotice) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ShippingNotice) GetItems() []*ShippingNoticeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShippingNotice) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

type ShippingNoticeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size     int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Search   *string  `protobuf:"bytes,3,opt,name=search,proto3,oneof" json:"search,omitempty"`
	Statuses []string `protobuf:"bytes,4,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *ShippingNoticeListRequest) Reset() {
	*x = ShippingNoticeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeListRequest) ProtoMessage() {}

func (x *ShippingNoticeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeListRequest.ProtoReflect.Descriptor instead.
func (*ShippingNoticeListRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{1}
}

func (x *ShippingNoticeListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ShippingNoticeListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ShippingNoticeListRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *ShippingNoticeListRequest) GetStatuses() []string {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type ShippingNoticeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Next     *int64            `protobuf:"varint,2,opt,name=next,proto3,oneof" json:"next,omitempty"`
	Previous *int64            `protobuf:"varint,3,opt,name=previous,proto3,oneof" json:"previous,omitempty"`
	Results  []*ShippingNotice `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ShippingNoticeListResponse) Reset() {
	*x = ShippingNoticeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeListResponse) ProtoMessage() {}

func (x *ShippingNoticeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeListResponse.ProtoReflect.Descriptor instead.
func (*ShippingNoticeListResponse) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{2}
}

func (x *ShippingNoticeListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ShippingNoticeListResponse) GetNext() int64 {
	if x != nil && x.Next != nil {
		return *x.Next
	}
	return 0
}

func (x *ShippingNoticeListResponse) GetPrevious() int64 {
	if x != nil && x.Previous != nil {
		return *x.Previous
	}
	return 0
}

func (x *ShippingNoticeListResponse) GetResults() []*ShippingNotice {
	if x != nil {
		return x.Results
	}
	return nil
}

type ShippingNoticeRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShippingNoticeRetrieveRequest) Reset() {
	*x = ShippingNoticeRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeRetrieveRequest) ProtoMessage() {}

func (x *ShippingNoticeRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeRetrieveRequest.ProtoReflect.Descriptor instead.
func (*ShippingNoticeRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{3}
}

func (x *ShippingNoticeRetrieveRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ShippingNoticeCandidateSubmitItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderItemId  int64   `protobuf:"varint,1,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
	InventoryIds []int64 `protobuf:"varint,2,rep,packed,name=inventory_ids,json=inventoryIds,proto3" json:"inventory_ids,omitempty"`
}

func (x *ShippingNoticeCandidateSubmitItem) Reset() {
	*x = ShippingNoticeCandidateSubmitItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeCandidateSubmitItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeCandidateSubmitItem) ProtoMessage() {}

func (x *ShippingNoticeCandidateSubmitItem) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeCandidateSubmitItem.ProtoReflect.Descriptor instead.
func (*ShippingNoticeCandidateSubmitItem) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{4}
}

func (x *ShippingNoticeCandidateSubmitItem) GetOrderItemId() int64 {
	if x != nil {
		return x.OrderItemId
	}
	return 0
}

func (x *ShippingNoticeCandidateSubmitItem) GetInventoryIds() []int64 {
	if x != nil {
		return x.InventoryIds
	}
	return nil
}

type ShippingNoticeCandidateSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidates []*ShippingNoticeCandidateSubmitItem `protobuf:"bytes,1,rep,name=candidates,proto3" json:"candidates,omitempty"`
}

func (x *ShippingNoticeCandidateSubmitRequest) Reset() {
	*x = ShippingNoticeCandidateSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeCandidateSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeCandidateSubmitRequest) ProtoMessage() {}

func (x *ShippingNoticeCandidateSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeCandidateSubmitRequest.ProtoReflect.Descriptor instead.
func (*ShippingNoticeCandidateSubmitRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{5}
}

func (x *ShippingNoticeCandidateSubmitRequest) GetCandidates() []*ShippingNoticeCandidateSubmitItem {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type ShippingNoticeRemoveItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId      int64                         `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RemovalType ShippingNoticeItemRemovalType `protobuf:"varint,3,opt,name=removal_type,json=removalType,proto3,enum=shipping_notice.ShippingNoticeItemRemovalType" json:"removal_type,omitempty"`
}

func (x *ShippingNoticeRemoveItemRequest) Reset() {
	*x = ShippingNoticeRemoveItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeRemoveItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeRemoveItemRequest) ProtoMessage() {}

func (x *ShippingNoticeRemoveItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeRemoveItemRequest.ProtoReflect.Descriptor instead.
func (*ShippingNoticeRemoveItemRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{6}
}

func (x *ShippingNoticeRemoveItemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShippingNoticeRemoveItemRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ShippingNoticeRemoveItemRequest) GetRemovalType() ShippingNoticeItemRemovalType {
	if x != nil {
		return x.RemovalType
	}
	return ShippingNoticeItemRemovalType_REMOVE_AND_RESET
}

type ShippingNoticeMoveItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId   int64 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SourceId int64 `protobuf:"varint,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TargetId int64 `protobuf:"varint,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *ShippingNoticeMoveItemRequest) Reset() {
	*x = ShippingNoticeMoveItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingNoticeMoveItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingNoticeMoveItemRequest) ProtoMessage() {}

func (x *ShippingNoticeMoveItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingNoticeMoveItemRequest.ProtoReflect.Descriptor instead.
func (*ShippingNoticeMoveItemRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{7}
}

func (x *ShippingNoticeMoveItemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShippingNoticeMoveItemRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ShippingNoticeMoveItemRequest) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *ShippingNoticeMoveItemRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type RecordShippingTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TemplateUrl string `protobuf:"bytes,2,opt,name=template_url,json=templateUrl,proto3" json:"template_url,omitempty"`
}

func (x *RecordShippingTemplateRequest) Reset() {
	*x = RecordShippingTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordShippingTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordShippingTemplateRequest) ProtoMessage() {}

func (x *RecordShippingTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordShippingTemplateRequest.ProtoReflect.Descriptor instead.
func (*RecordShippingTemplateRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{8}
}

func (x *RecordShippingTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecordShippingTemplateRequest) GetTemplateUrl() string {
	if x != nil {
		return x.TemplateUrl
	}
	return ""
}

type PackageTrackingPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageCode    string `protobuf:"bytes,1,opt,name=package_code,json=packageCode,proto3" json:"package_code,omitempty"`
	TrackingNumber string `protobuf:"bytes,2,opt,name=tracking_number,json=trackingNumber,proto3" json:"tracking_number,omitempty"`
}

func (x *PackageTrackingPair) Reset() {
	*x = PackageTrackingPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageTrackingPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageTrackingPair) ProtoMessage() {}

func (x *PackageTrackingPair) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageTrackingPair.ProtoReflect.Descriptor instead.
func (*PackageTrackingPair) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{9}
}

func (x *PackageTrackingPair) GetPackageCode() string {
	if x != nil {
		return x.PackageCode
	}
	return ""
}

func (x *PackageTrackingPair) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

type SubmitTrackingExcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TrackingPairs []*PackageTrackingPair `protobuf:"bytes,2,rep,name=tracking_pairs,json=trackingPairs,proto3" json:"tracking_pairs,omitempty"`
	UserUuid      string                 `protobuf:"bytes,3,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	UserUsername  string                 `protobuf:"bytes,4,opt,name=user_username,json=userUsername,proto3" json:"user_username,omitempty"`
}

func (x *SubmitTrackingExcelRequest) Reset() {
	*x = SubmitTrackingExcelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipping_notice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTrackingExcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTrackingExcelRequest) ProtoMessage() {}

func (x *SubmitTrackingExcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipping_notice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTrackingExcelRequest.ProtoReflect.Descriptor instead.
func (*SubmitTrackingExcelRequest) Descriptor() ([]byte, []int) {
	return file_shipping_notice_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitTrackingExcelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitTrackingExcelRequest) GetTrackingPairs() []*PackageTrackingPair {
	if x != nil {
		return x.TrackingPairs
	}
	return nil
}

func (x *SubmitTrackingExcelRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *SubmitTrackingExcelRequest) GetUserUsername() string {
	if x != nil {
		return x.UserUsername
	}
	return ""
}

var File_shipping_notice_proto protoreflect.FileDescriptor

var file_shipping_notice_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x03, 0x0a, 0x0e, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xbd, 0x01, 0x0a, 0x1a,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x1d, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x21,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x7a, 0x0a, 0x24, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x52, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x1f, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1d, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1d, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0x61, 0x0a, 0x13, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0xbb, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x4b, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x2a, 0x48, 0x0a, 0x14, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x48, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x1d, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41,
	0x47, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x49, 0x43, 0x45, 0x10, 0x02, 0x32, 0xfa, 0x08, 0x0a, 0x18, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x12, 0x2e, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a, 0x1f,
	0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1f, 0x2e, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x08, 0x4d, 0x6f,
	0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e, 0x4c, 0x6f, 0x63,
	0x6b, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x2e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x13, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x63,
	0x65, 0x6c, 0x12, 0x2b, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6c, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x2e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x62, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shipping_notice_proto_rawDescOnce sync.Once
	file_shipping_notice_proto_rawDescData = file_shipping_notice_proto_rawDesc
)

func file_shipping_notice_proto_rawDescGZIP() []byte {
	file_shipping_notice_proto_rawDescOnce.Do(func() {
		file_shipping_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_shipping_notice_proto_rawDescData)
	})
	return file_shipping_notice_proto_rawDescData
}

var file_shipping_notice_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shipping_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_shipping_notice_proto_goTypes = []interface{}{
	(ShippingNoticeStatus)(0),                    // 0: shipping_notice.ShippingNoticeStatus
	(ShippingNoticeItemRemovalType)(0),           // 1: shipping_notice.ShippingNoticeItemRemovalType
	(*ShippingNotice)(nil),                       // 2: shipping_notice.ShippingNotice
	(*ShippingNoticeListRequest)(nil),            // 3: shipping_notice.ShippingNoticeListRequest
	(*ShippingNoticeListResponse)(nil),           // 4: shipping_notice.ShippingNoticeListResponse
	(*ShippingNoticeRetrieveRequest)(nil),        // 5: shipping_notice.ShippingNoticeRetrieveRequest
	(*ShippingNoticeCandidateSubmitItem)(nil),    // 6: shipping_notice.ShippingNoticeCandidateSubmitItem
	(*ShippingNoticeCandidateSubmitRequest)(nil), // 7: shipping_notice.ShippingNoticeCandidateSubmitRequest
	(*ShippingNoticeRemoveItemRequest)(nil),      // 8: shipping_notice.ShippingNoticeRemoveItemRequest
	(*ShippingNoticeMoveItemRequest)(nil),        // 9: shipping_notice.ShippingNoticeMoveItemRequest
	(*RecordShippingTemplateRequest)(nil),        // 10: shipping_notice.RecordShippingTemplateRequest
	(*PackageTrackingPair)(nil),                  // 11: shipping_notice.PackageTrackingPair
	(*SubmitTrackingExcelRequest)(nil),           // 12: shipping_notice.SubmitTrackingExcelRequest
	(*ShippingNoticeItem)(nil),                   // 13: shipping_notice_item.ShippingNoticeItem
	(*Package)(nil),                              // 14: package.Package
	(*emptypb.Empty)(nil),                        // 15: google.protobuf.Empty
	(*ShippingCandidate)(nil),                    // 16: shippingcandidate.ShippingCandidate
}
var file_shipping_notice_proto_depIdxs = []int32{
	13, // 0: shipping_notice.ShippingNotice.items:type_name -> shipping_notice_item.ShippingNoticeItem
	14, // 1: shipping_notice.ShippingNotice.packages:type_name -> package.Package
	2,  // 2: shipping_notice.ShippingNoticeListResponse.results:type_name -> shipping_notice.ShippingNotice
	6,  // 3: shipping_notice.ShippingNoticeCandidateSubmitRequest.candidates:type_name -> shipping_notice.ShippingNoticeCandidateSubmitItem
	1,  // 4: shipping_notice.ShippingNoticeRemoveItemRequest.removal_type:type_name -> shipping_notice.ShippingNoticeItemRemovalType
	11, // 5: shipping_notice.SubmitTrackingExcelRequest.tracking_pairs:type_name -> shipping_notice.PackageTrackingPair
	3,  // 6: shipping_notice.ShippingNoticeController.List:input_type -> shipping_notice.ShippingNoticeListRequest
	2,  // 7: shipping_notice.ShippingNoticeController.Create:input_type -> shipping_notice.ShippingNotice
	5,  // 8: shipping_notice.ShippingNoticeController.Retrieve:input_type -> shipping_notice.ShippingNoticeRetrieveRequest
	2,  // 9: shipping_notice.ShippingNoticeController.Update:input_type -> shipping_notice.ShippingNotice
	2,  // 10: shipping_notice.ShippingNoticeController.Destroy:input_type -> shipping_notice.ShippingNotice
	8,  // 11: shipping_notice.ShippingNoticeController.RemoveItem:input_type -> shipping_notice.ShippingNoticeRemoveItemRequest
	9,  // 12: shipping_notice.ShippingNoticeController.MoveItem:input_type -> shipping_notice.ShippingNoticeMoveItemRequest
	5,  // 13: shipping_notice.ShippingNoticeController.LockAndPackage:input_type -> shipping_notice.ShippingNoticeRetrieveRequest
	10, // 14: shipping_notice.ShippingNoticeController.RecordShippingTemplate:input_type -> shipping_notice.RecordShippingTemplateRequest
	12, // 15: shipping_notice.ShippingNoticeController.SubmitTrackingExcel:input_type -> shipping_notice.SubmitTrackingExcelRequest
	15, // 16: shipping_notice.ShippingNoticeController.GetCandidates:input_type -> google.protobuf.Empty
	7,  // 17: shipping_notice.ShippingNoticeController.SubmitCandidates:input_type -> shipping_notice.ShippingNoticeCandidateSubmitRequest
	4,  // 18: shipping_notice.ShippingNoticeController.List:output_type -> shipping_notice.ShippingNoticeListResponse
	2,  // 19: shipping_notice.ShippingNoticeController.Create:output_type -> shipping_notice.ShippingNotice
	2,  // 20: shipping_notice.ShippingNoticeController.Retrieve:output_type -> shipping_notice.ShippingNotice
	2,  // 21: shipping_notice.ShippingNoticeController.Update:output_type -> shipping_notice.ShippingNotice
	15, // 22: shipping_notice.ShippingNoticeController.Destroy:output_type -> google.protobuf.Empty
	2,  // 23: shipping_notice.ShippingNoticeController.RemoveItem:output_type -> shipping_notice.ShippingNotice
	2,  // 24: shipping_notice.ShippingNoticeController.MoveItem:output_type -> shipping_notice.ShippingNotice
	2,  // 25: shipping_notice.ShippingNoticeController.LockAndPackage:output_type -> shipping_notice.ShippingNotice
	2,  // 26: shipping_notice.ShippingNoticeController.RecordShippingTemplate:output_type -> shipping_notice.ShippingNotice
	2,  // 27: shipping_notice.ShippingNoticeController.SubmitTrackingExcel:output_type -> shipping_notice.ShippingNotice
	16, // 28: shipping_notice.ShippingNoticeController.GetCandidates:output_type -> shippingcandidate.ShippingCandidate
	2,  // 29: shipping_notice.ShippingNoticeController.SubmitCandidates:output_type -> shipping_notice.ShippingNotice
	18, // [18:30] is the sub-list for method output_type
	6,  // [6:18] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_shipping_notice_proto_init() }
func file_shipping_notice_proto_init() {
	if File_shipping_notice_proto != nil {
		return
	}
	file_shipping_notice_item_proto_init()
	file_package_proto_init()
	file_shipping_candidate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shipping_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeCandidateSubmitItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeCandidateSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeRemoveItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingNoticeMoveItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordShippingTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageTrackingPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipping_notice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTrackingExcelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shipping_notice_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_shipping_notice_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_shipping_notice_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shipping_notice_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shipping_notice_proto_goTypes,
		DependencyIndexes: file_shipping_notice_proto_depIdxs,
		EnumInfos:         file_shipping_notice_proto_enumTypes,
		MessageInfos:      file_shipping_notice_proto_msgTypes,
	}.Build()
	File_shipping_notice_proto = out.File
	file_shipping_notice_proto_rawDesc = nil
	file_shipping_notice_proto_goTypes = nil
	file_shipping_notice_proto_depIdxs = nil
}
