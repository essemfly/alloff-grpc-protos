// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: productGroup.proto

package goalloff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductGroupType int32

const (
	ProductGroupType_PRODUCT_GROUP_TIMEDEAL   ProductGroupType = 0
	ProductGroupType_PRODUCT_GROUP_EXHIBITION ProductGroupType = 1
	ProductGroupType_PRODUCT_GROUP_GROUPDEAL  ProductGroupType = 2
)

// Enum value maps for ProductGroupType.
var (
	ProductGroupType_name = map[int32]string{
		0: "PRODUCT_GROUP_TIMEDEAL",
		1: "PRODUCT_GROUP_EXHIBITION",
		2: "PRODUCT_GROUP_GROUPDEAL",
	}
	ProductGroupType_value = map[string]int32{
		"PRODUCT_GROUP_TIMEDEAL":   0,
		"PRODUCT_GROUP_EXHIBITION": 1,
		"PRODUCT_GROUP_GROUPDEAL":  2,
	}
)

func (x ProductGroupType) Enum() *ProductGroupType {
	p := new(ProductGroupType)
	*p = x
	return p
}

func (x ProductGroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductGroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_productGroup_proto_enumTypes[0].Descriptor()
}

func (ProductGroupType) Type() protoreflect.EnumType {
	return &file_productGroup_proto_enumTypes[0]
}

func (x ProductGroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductGroupType.Descriptor instead.
func (ProductGroupType) EnumDescriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{0}
}

// Product Group Service
type GetProductGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductGroupId string `protobuf:"bytes,1,opt,name=product_group_id,json=productGroupId,proto3" json:"product_group_id,omitempty"`
}

func (x *GetProductGroupRequest) Reset() {
	*x = GetProductGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductGroupRequest) ProtoMessage() {}

func (x *GetProductGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductGroupRequest.ProtoReflect.Descriptor instead.
func (*GetProductGroupRequest) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{0}
}

func (x *GetProductGroupRequest) GetProductGroupId() string {
	if x != nil {
		return x.ProductGroupId
	}
	return ""
}

type CreateProductGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle  *string          `protobuf:"bytes,2,opt,name=short_title,json=shortTitle,proto3,oneof" json:"short_title,omitempty"`
	Instruction []string         `protobuf:"bytes,3,rep,name=instruction,proto3" json:"instruction,omitempty"`
	ImageUrl    *string          `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	StartTime   string           `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime  string           `protobuf:"bytes,6,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	GroupType   ProductGroupType `protobuf:"varint,7,opt,name=group_type,json=groupType,proto3,enum=goalloff.ProductGroupType" json:"group_type,omitempty"`
	BrandId     *string          `protobuf:"bytes,8,opt,name=brand_id,json=brandId,proto3,oneof" json:"brand_id,omitempty"`
}

func (x *CreateProductGroupRequest) Reset() {
	*x = CreateProductGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductGroupRequest) ProtoMessage() {}

func (x *CreateProductGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateProductGroupRequest) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProductGroupRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProductGroupRequest) GetShortTitle() string {
	if x != nil && x.ShortTitle != nil {
		return *x.ShortTitle
	}
	return ""
}

func (x *CreateProductGroupRequest) GetInstruction() []string {
	if x != nil {
		return x.Instruction
	}
	return nil
}

func (x *CreateProductGroupRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *CreateProductGroupRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateProductGroupRequest) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *CreateProductGroupRequest) GetGroupType() ProductGroupType {
	if x != nil {
		return x.GroupType
	}
	return ProductGroupType_PRODUCT_GROUP_TIMEDEAL
}

func (x *CreateProductGroupRequest) GetBrandId() string {
	if x != nil && x.BrandId != nil {
		return *x.BrandId
	}
	return ""
}

type ListProductGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  *ProductGroupQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Offset int32              `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32              `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListProductGroupsRequest) Reset() {
	*x = ListProductGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductGroupsRequest) ProtoMessage() {}

func (x *ListProductGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListProductGroupsRequest) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{2}
}

func (x *ListProductGroupsRequest) GetQuery() *ProductGroupQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProductGroupsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListProductGroupsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type EditProductGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          *string           `protobuf:"bytes,1,opt,name=title,proto3,oneof" json:"title,omitempty"`
	ShortTitle     *string           `protobuf:"bytes,2,opt,name=short_title,json=shortTitle,proto3,oneof" json:"short_title,omitempty"`
	Instruction    []string          `protobuf:"bytes,3,rep,name=instruction,proto3" json:"instruction,omitempty"`
	ImageUrl       *string           `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	StartTime      *string           `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	FinishTime     *string           `protobuf:"bytes,6,opt,name=finish_time,json=finishTime,proto3,oneof" json:"finish_time,omitempty"`
	ProductGroupId string            `protobuf:"bytes,7,opt,name=product_group_id,json=productGroupId,proto3" json:"product_group_id,omitempty"`
	GroupType      *ProductGroupType `protobuf:"varint,9,opt,name=group_type,json=groupType,proto3,enum=goalloff.ProductGroupType,oneof" json:"group_type,omitempty"`
	BrandId        *string           `protobuf:"bytes,10,opt,name=brand_id,json=brandId,proto3,oneof" json:"brand_id,omitempty"`
}

func (x *EditProductGroupRequest) Reset() {
	*x = EditProductGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditProductGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditProductGroupRequest) ProtoMessage() {}

func (x *EditProductGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditProductGroupRequest.ProtoReflect.Descriptor instead.
func (*EditProductGroupRequest) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{3}
}

func (x *EditProductGroupRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *EditProductGroupRequest) GetShortTitle() string {
	if x != nil && x.ShortTitle != nil {
		return *x.ShortTitle
	}
	return ""
}

func (x *EditProductGroupRequest) GetInstruction() []string {
	if x != nil {
		return x.Instruction
	}
	return nil
}

func (x *EditProductGroupRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *EditProductGroupRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *EditProductGroupRequest) GetFinishTime() string {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return ""
}

func (x *EditProductGroupRequest) GetProductGroupId() string {
	if x != nil {
		return x.ProductGroupId
	}
	return ""
}

func (x *EditProductGroupRequest) GetGroupType() ProductGroupType {
	if x != nil && x.GroupType != nil {
		return *x.GroupType
	}
	return ProductGroupType_PRODUCT_GROUP_TIMEDEAL
}

func (x *EditProductGroupRequest) GetBrandId() string {
	if x != nil && x.BrandId != nil {
		return *x.BrandId
	}
	return ""
}

type ProductsInPgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductGroupId    string                    `protobuf:"bytes,1,opt,name=product_group_id,json=productGroupId,proto3" json:"product_group_id,omitempty"`
	ProductPriorities []*ProductPriorityMessage `protobuf:"bytes,2,rep,name=product_priorities,json=productPriorities,proto3" json:"product_priorities,omitempty"`
}

func (x *ProductsInPgRequest) Reset() {
	*x = ProductsInPgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductsInPgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductsInPgRequest) ProtoMessage() {}

func (x *ProductsInPgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductsInPgRequest.ProtoReflect.Descriptor instead.
func (*ProductsInPgRequest) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{4}
}

func (x *ProductsInPgRequest) GetProductGroupId() string {
	if x != nil {
		return x.ProductGroupId
	}
	return ""
}

func (x *ProductsInPgRequest) GetProductPriorities() []*ProductPriorityMessage {
	if x != nil {
		return x.ProductPriorities
	}
	return nil
}

type RemoveProductInPgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductGroupId string `protobuf:"bytes,1,opt,name=product_group_id,json=productGroupId,proto3" json:"product_group_id,omitempty"`
	ProductId      string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *RemoveProductInPgRequest) Reset() {
	*x = RemoveProductInPgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProductInPgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProductInPgRequest) ProtoMessage() {}

func (x *RemoveProductInPgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProductInPgRequest.ProtoReflect.Descriptor instead.
func (*RemoveProductInPgRequest) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveProductInPgRequest) GetProductGroupId() string {
	if x != nil {
		return x.ProductGroupId
	}
	return ""
}

func (x *RemoveProductInPgRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type ProductGroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string                   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle     string                   `protobuf:"bytes,2,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Instruction    []string                 `protobuf:"bytes,3,rep,name=instruction,proto3" json:"instruction,omitempty"`
	ImageUrl       string                   `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Products       []*ProductInGroupMessage `protobuf:"bytes,5,rep,name=products,proto3" json:"products,omitempty"`
	StartTime      string                   `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime     string                   `protobuf:"bytes,7,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	ProductGroupId string                   `protobuf:"bytes,8,opt,name=product_group_id,json=productGroupId,proto3" json:"product_group_id,omitempty"`
	GroupType      ProductGroupType         `protobuf:"varint,9,opt,name=group_type,json=groupType,proto3,enum=goalloff.ProductGroupType" json:"group_type,omitempty"`
	Brand          *BrandMessage            `protobuf:"bytes,10,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *ProductGroupMessage) Reset() {
	*x = ProductGroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGroupMessage) ProtoMessage() {}

func (x *ProductGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGroupMessage.ProtoReflect.Descriptor instead.
func (*ProductGroupMessage) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{6}
}

func (x *ProductGroupMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProductGroupMessage) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *ProductGroupMessage) GetInstruction() []string {
	if x != nil {
		return x.Instruction
	}
	return nil
}

func (x *ProductGroupMessage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ProductGroupMessage) GetProducts() []*ProductInGroupMessage {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *ProductGroupMessage) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ProductGroupMessage) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *ProductGroupMessage) GetProductGroupId() string {
	if x != nil {
		return x.ProductGroupId
	}
	return ""
}

func (x *ProductGroupMessage) GetGroupType() ProductGroupType {
	if x != nil {
		return x.GroupType
	}
	return ProductGroupType_PRODUCT_GROUP_TIMEDEAL
}

func (x *ProductGroupMessage) GetBrand() *BrandMessage {
	if x != nil {
		return x.Brand
	}
	return nil
}

type ListProductGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pgs         []*ProductGroupMessage `protobuf:"bytes,1,rep,name=pgs,proto3" json:"pgs,omitempty"`
	Offset      int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit       int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalCounts int32                  `protobuf:"varint,4,opt,name=total_counts,json=totalCounts,proto3" json:"total_counts,omitempty"`
}

func (x *ListProductGroupsResponse) Reset() {
	*x = ListProductGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductGroupsResponse) ProtoMessage() {}

func (x *ListProductGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListProductGroupsResponse) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{7}
}

func (x *ListProductGroupsResponse) GetPgs() []*ProductGroupMessage {
	if x != nil {
		return x.Pgs
	}
	return nil
}

func (x *ListProductGroupsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListProductGroupsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListProductGroupsResponse) GetTotalCounts() int32 {
	if x != nil {
		return x.TotalCounts
	}
	return 0
}

type ProductInGroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product  *ProductMessage `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Priority int32           `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *ProductInGroupMessage) Reset() {
	*x = ProductInGroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInGroupMessage) ProtoMessage() {}

func (x *ProductInGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInGroupMessage.ProtoReflect.Descriptor instead.
func (*ProductInGroupMessage) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{8}
}

func (x *ProductInGroupMessage) GetProduct() *ProductMessage {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *ProductInGroupMessage) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type ProductPriorityMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Priority  int32  `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *ProductPriorityMessage) Reset() {
	*x = ProductPriorityMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPriorityMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPriorityMessage) ProtoMessage() {}

func (x *ProductPriorityMessage) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPriorityMessage.ProtoReflect.Descriptor instead.
func (*ProductPriorityMessage) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{9}
}

func (x *ProductPriorityMessage) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductPriorityMessage) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type ProductGroupQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchQuery *string           `protobuf:"bytes,1,opt,name=search_query,json=searchQuery,proto3,oneof" json:"search_query,omitempty"`
	GroupType   *ProductGroupType `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3,enum=goalloff.ProductGroupType,oneof" json:"group_type,omitempty"`
}

func (x *ProductGroupQuery) Reset() {
	*x = ProductGroupQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productGroup_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGroupQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGroupQuery) ProtoMessage() {}

func (x *ProductGroupQuery) ProtoReflect() protoreflect.Message {
	mi := &file_productGroup_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGroupQuery.ProtoReflect.Descriptor instead.
func (*ProductGroupQuery) Descriptor() ([]byte, []int) {
	return file_productGroup_proto_rawDescGZIP(), []int{10}
}

func (x *ProductGroupQuery) GetSearchQuery() string {
	if x != nil && x.SearchQuery != nil {
		return *x.SearchQuery
	}
	return ""
}

func (x *ProductGroupQuery) GetGroupType() ProductGroupType {
	if x != nil && x.GroupType != nil {
		return *x.GroupType
	}
	return ProductGroupType_PRODUCT_GROUP_TIMEDEAL
}

var File_productGroup_proto protoreflect.FileDescriptor

var file_productGroup_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x1a, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xe1,
	0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x22, 0x7b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0xd5, 0x03, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x50, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x18, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x50, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x9b, 0x03, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x9d, 0x01,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x70,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x70, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x67, 0x0a,
	0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f,
	0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x53, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x69, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x44, 0x45, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x45, 0x58, 0x48, 0x49, 0x42,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x44, 0x45,
	0x41, 0x4c, 0x10, 0x02, 0x32, 0x8c, 0x05, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61,
	0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x23, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67,
	0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x1a, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x50, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x50, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x60, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x50, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x62, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_productGroup_proto_rawDescOnce sync.Once
	file_productGroup_proto_rawDescData = file_productGroup_proto_rawDesc
)

func file_productGroup_proto_rawDescGZIP() []byte {
	file_productGroup_proto_rawDescOnce.Do(func() {
		file_productGroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_productGroup_proto_rawDescData)
	})
	return file_productGroup_proto_rawDescData
}

var file_productGroup_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_productGroup_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_productGroup_proto_goTypes = []interface{}{
	(ProductGroupType)(0),             // 0: goalloff.ProductGroupType
	(*GetProductGroupRequest)(nil),    // 1: goalloff.GetProductGroupRequest
	(*CreateProductGroupRequest)(nil), // 2: goalloff.CreateProductGroupRequest
	(*ListProductGroupsRequest)(nil),  // 3: goalloff.ListProductGroupsRequest
	(*EditProductGroupRequest)(nil),   // 4: goalloff.EditProductGroupRequest
	(*ProductsInPgRequest)(nil),       // 5: goalloff.ProductsInPgRequest
	(*RemoveProductInPgRequest)(nil),  // 6: goalloff.RemoveProductInPgRequest
	(*ProductGroupMessage)(nil),       // 7: goalloff.ProductGroupMessage
	(*ListProductGroupsResponse)(nil), // 8: goalloff.ListProductGroupsResponse
	(*ProductInGroupMessage)(nil),     // 9: goalloff.ProductInGroupMessage
	(*ProductPriorityMessage)(nil),    // 10: goalloff.ProductPriorityMessage
	(*ProductGroupQuery)(nil),         // 11: goalloff.ProductGroupQuery
	(*BrandMessage)(nil),              // 12: goalloff.BrandMessage
	(*ProductMessage)(nil),            // 13: goalloff.ProductMessage
}
var file_productGroup_proto_depIdxs = []int32{
	0,  // 0: goalloff.CreateProductGroupRequest.group_type:type_name -> goalloff.ProductGroupType
	11, // 1: goalloff.ListProductGroupsRequest.query:type_name -> goalloff.ProductGroupQuery
	0,  // 2: goalloff.EditProductGroupRequest.group_type:type_name -> goalloff.ProductGroupType
	10, // 3: goalloff.ProductsInPgRequest.product_priorities:type_name -> goalloff.ProductPriorityMessage
	9,  // 4: goalloff.ProductGroupMessage.products:type_name -> goalloff.ProductInGroupMessage
	0,  // 5: goalloff.ProductGroupMessage.group_type:type_name -> goalloff.ProductGroupType
	12, // 6: goalloff.ProductGroupMessage.brand:type_name -> goalloff.BrandMessage
	7,  // 7: goalloff.ListProductGroupsResponse.pgs:type_name -> goalloff.ProductGroupMessage
	13, // 8: goalloff.ProductInGroupMessage.product:type_name -> goalloff.ProductMessage
	0,  // 9: goalloff.ProductGroupQuery.group_type:type_name -> goalloff.ProductGroupType
	1,  // 10: goalloff.ProductGroup.GetProductGroup:input_type -> goalloff.GetProductGroupRequest
	2,  // 11: goalloff.ProductGroup.CreateProductGroup:input_type -> goalloff.CreateProductGroupRequest
	3,  // 12: goalloff.ProductGroup.ListProductGroups:input_type -> goalloff.ListProductGroupsRequest
	4,  // 13: goalloff.ProductGroup.EditProductGroup:input_type -> goalloff.EditProductGroupRequest
	5,  // 14: goalloff.ProductGroup.PushProductsInProductGroup:input_type -> goalloff.ProductsInPgRequest
	5,  // 15: goalloff.ProductGroup.UpdateProductsInProductGroup:input_type -> goalloff.ProductsInPgRequest
	6,  // 16: goalloff.ProductGroup.RemoveProductInProductGroup:input_type -> goalloff.RemoveProductInPgRequest
	7,  // 17: goalloff.ProductGroup.GetProductGroup:output_type -> goalloff.ProductGroupMessage
	7,  // 18: goalloff.ProductGroup.CreateProductGroup:output_type -> goalloff.ProductGroupMessage
	8,  // 19: goalloff.ProductGroup.ListProductGroups:output_type -> goalloff.ListProductGroupsResponse
	7,  // 20: goalloff.ProductGroup.EditProductGroup:output_type -> goalloff.ProductGroupMessage
	7,  // 21: goalloff.ProductGroup.PushProductsInProductGroup:output_type -> goalloff.ProductGroupMessage
	7,  // 22: goalloff.ProductGroup.UpdateProductsInProductGroup:output_type -> goalloff.ProductGroupMessage
	7,  // 23: goalloff.ProductGroup.RemoveProductInProductGroup:output_type -> goalloff.ProductGroupMessage
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_productGroup_proto_init() }
func file_productGroup_proto_init() {
	if File_productGroup_proto != nil {
		return
	}
	file_product_proto_init()
	file_brand_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_productGroup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditProductGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductsInPgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProductInPgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductGroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInGroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductPriorityMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productGroup_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductGroupQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_productGroup_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_productGroup_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_productGroup_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_productGroup_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_productGroup_proto_goTypes,
		DependencyIndexes: file_productGroup_proto_depIdxs,
		EnumInfos:         file_productGroup_proto_enumTypes,
		MessageInfos:      file_productGroup_proto_msgTypes,
	}.Build()
	File_productGroup_proto = out.File
	file_productGroup_proto_rawDesc = nil
	file_productGroup_proto_goTypes = nil
	file_productGroup_proto_depIdxs = nil
}
