// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: hometab.proto

package goalloff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemType int32

const (
	ItemType_HOMETAB_ITEM_BRANDS              ItemType = 0
	ItemType_HOMETAB_ITEM_EXHIBITION_A        ItemType = 1
	ItemType_HOMETAB_ITEM_EXHIBITIONS         ItemType = 2
	ItemType_HOMETAB_ITEM_EXHIBITION          ItemType = 3
	ItemType_HOMETAB_ITEM_PRODUCTS_BRANDS     ItemType = 4
	ItemType_HOMETAB_ITEM_PRODUCTS_CATEGORIES ItemType = 5
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "HOMETAB_ITEM_BRANDS",
		1: "HOMETAB_ITEM_EXHIBITION_A",
		2: "HOMETAB_ITEM_EXHIBITIONS",
		3: "HOMETAB_ITEM_EXHIBITION",
		4: "HOMETAB_ITEM_PRODUCTS_BRANDS",
		5: "HOMETAB_ITEM_PRODUCTS_CATEGORIES",
	}
	ItemType_value = map[string]int32{
		"HOMETAB_ITEM_BRANDS":              0,
		"HOMETAB_ITEM_EXHIBITION_A":        1,
		"HOMETAB_ITEM_EXHIBITIONS":         2,
		"HOMETAB_ITEM_EXHIBITION":          3,
		"HOMETAB_ITEM_PRODUCTS_BRANDS":     4,
		"HOMETAB_ITEM_PRODUCTS_CATEGORIES": 5,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_hometab_proto_enumTypes[0].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_hometab_proto_enumTypes[0]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{0}
}

type GetHomeTabItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *GetHomeTabItemRequest) Reset() {
	*x = GetHomeTabItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomeTabItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeTabItemRequest) ProtoMessage() {}

func (x *GetHomeTabItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeTabItemRequest.ProtoReflect.Descriptor instead.
func (*GetHomeTabItemRequest) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{0}
}

func (x *GetHomeTabItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type ListHomeTabItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListHomeTabItemsRequest) Reset() {
	*x = ListHomeTabItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHomeTabItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeTabItemsRequest) ProtoMessage() {}

func (x *ListHomeTabItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeTabItemsRequest.ProtoReflect.Descriptor instead.
func (*ListHomeTabItemsRequest) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{1}
}

func (x *ListHomeTabItemsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListHomeTabItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type EditHomeTabItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HometabId    string         `protobuf:"bytes,1,opt,name=hometab_id,json=hometabId,proto3" json:"hometab_id,omitempty"`
	Title        *string        `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Description  *string        `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Tags         []string       `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	BackImageUrl *string        `protobuf:"bytes,5,opt,name=back_image_url,json=backImageUrl,proto3,oneof" json:"back_image_url,omitempty"`
	StartTime    *string        `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	FinishTime   *string        `protobuf:"bytes,7,opt,name=finish_time,json=finishTime,proto3,oneof" json:"finish_time,omitempty"`
	Contents     *ItemRequester `protobuf:"bytes,8,opt,name=contents,proto3" json:"contents,omitempty"`
	Weight       *int32         `protobuf:"varint,9,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	IsLive       *bool          `protobuf:"varint,10,opt,name=is_live,json=isLive,proto3,oneof" json:"is_live,omitempty"`
}

func (x *EditHomeTabItemRequest) Reset() {
	*x = EditHomeTabItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHomeTabItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHomeTabItemRequest) ProtoMessage() {}

func (x *EditHomeTabItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHomeTabItemRequest.ProtoReflect.Descriptor instead.
func (*EditHomeTabItemRequest) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{2}
}

func (x *EditHomeTabItemRequest) GetHometabId() string {
	if x != nil {
		return x.HometabId
	}
	return ""
}

func (x *EditHomeTabItemRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *EditHomeTabItemRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *EditHomeTabItemRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EditHomeTabItemRequest) GetBackImageUrl() string {
	if x != nil && x.BackImageUrl != nil {
		return *x.BackImageUrl
	}
	return ""
}

func (x *EditHomeTabItemRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *EditHomeTabItemRequest) GetFinishTime() string {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return ""
}

func (x *EditHomeTabItemRequest) GetContents() *ItemRequester {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *EditHomeTabItemRequest) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *EditHomeTabItemRequest) GetIsLive() bool {
	if x != nil && x.IsLive != nil {
		return *x.IsLive
	}
	return false
}

type CreateHomeTabItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description  string         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tags         []string       `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	BackImageUrl *string        `protobuf:"bytes,4,opt,name=back_image_url,json=backImageUrl,proto3,oneof" json:"back_image_url,omitempty"`
	StartTime    string         `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime   string         `protobuf:"bytes,6,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Contents     *ItemRequester `protobuf:"bytes,7,opt,name=contents,proto3" json:"contents,omitempty"`
	Weight       int32          `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *CreateHomeTabItemRequest) Reset() {
	*x = CreateHomeTabItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHomeTabItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomeTabItemRequest) ProtoMessage() {}

func (x *CreateHomeTabItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomeTabItemRequest.ProtoReflect.Descriptor instead.
func (*CreateHomeTabItemRequest) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{3}
}

func (x *CreateHomeTabItemRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateHomeTabItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHomeTabItemRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateHomeTabItemRequest) GetBackImageUrl() string {
	if x != nil && x.BackImageUrl != nil {
		return *x.BackImageUrl
	}
	return ""
}

func (x *CreateHomeTabItemRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateHomeTabItemRequest) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *CreateHomeTabItemRequest) GetContents() *ItemRequester {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CreateHomeTabItemRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type GetHomeTabItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *HomeTabItemMessage `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetHomeTabItemResponse) Reset() {
	*x = GetHomeTabItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomeTabItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeTabItemResponse) ProtoMessage() {}

func (x *GetHomeTabItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeTabItemResponse.ProtoReflect.Descriptor instead.
func (*GetHomeTabItemResponse) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{4}
}

func (x *GetHomeTabItemResponse) GetItem() *HomeTabItemMessage {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListHomeTabItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items       []*HomeTabItemMessage `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Offset      int32                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit       int32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalCounts int32                 `protobuf:"varint,4,opt,name=total_counts,json=totalCounts,proto3" json:"total_counts,omitempty"`
}

func (x *ListHomeTabItemsResponse) Reset() {
	*x = ListHomeTabItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHomeTabItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeTabItemsResponse) ProtoMessage() {}

func (x *ListHomeTabItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeTabItemsResponse.ProtoReflect.Descriptor instead.
func (*ListHomeTabItemsResponse) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{5}
}

func (x *ListHomeTabItemsResponse) GetItems() []*HomeTabItemMessage {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListHomeTabItemsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListHomeTabItemsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListHomeTabItemsResponse) GetTotalCounts() int32 {
	if x != nil {
		return x.TotalCounts
	}
	return 0
}

type EditHomeTabItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *HomeTabItemMessage `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *EditHomeTabItemResponse) Reset() {
	*x = EditHomeTabItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHomeTabItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHomeTabItemResponse) ProtoMessage() {}

func (x *EditHomeTabItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHomeTabItemResponse.ProtoReflect.Descriptor instead.
func (*EditHomeTabItemResponse) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{6}
}

func (x *EditHomeTabItemResponse) GetItem() *HomeTabItemMessage {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateHomeTabItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *HomeTabItemMessage `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateHomeTabItemResponse) Reset() {
	*x = CreateHomeTabItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHomeTabItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomeTabItemResponse) ProtoMessage() {}

func (x *CreateHomeTabItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomeTabItemResponse.ProtoReflect.Descriptor instead.
func (*CreateHomeTabItemResponse) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{7}
}

func (x *CreateHomeTabItemResponse) GetItem() *HomeTabItemMessage {
	if x != nil {
		return x.Item
	}
	return nil
}

type HomeTabItemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId       string                       `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Title        string                       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description  string                       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Tags         []string                     `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	BackImageUrl string                       `protobuf:"bytes,5,opt,name=back_image_url,json=backImageUrl,proto3" json:"back_image_url,omitempty"`
	ItemType     ItemType                     `protobuf:"varint,6,opt,name=item_type,json=itemType,proto3,enum=goalloff.ItemType" json:"item_type,omitempty"`
	StartTime    string                       `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime   string                       `protobuf:"bytes,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Products     []*ProductMessage            `protobuf:"bytes,9,rep,name=products,proto3" json:"products,omitempty"`
	Brands       []*BrandMessage              `protobuf:"bytes,10,rep,name=brands,proto3" json:"brands,omitempty"`
	Exhibitions  []*ExhibitionMessage         `protobuf:"bytes,11,rep,name=exhibitions,proto3" json:"exhibitions,omitempty"`
	Reference    *HomeTabItemReferenceMessage `protobuf:"bytes,12,opt,name=reference,proto3" json:"reference,omitempty"`
	Weight       int32                        `protobuf:"varint,13,opt,name=weight,proto3" json:"weight,omitempty"`
	IsLive       bool                         `protobuf:"varint,14,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
}

func (x *HomeTabItemMessage) Reset() {
	*x = HomeTabItemMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeTabItemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeTabItemMessage) ProtoMessage() {}

func (x *HomeTabItemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeTabItemMessage.ProtoReflect.Descriptor instead.
func (*HomeTabItemMessage) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{8}
}

func (x *HomeTabItemMessage) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *HomeTabItemMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomeTabItemMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HomeTabItemMessage) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *HomeTabItemMessage) GetBackImageUrl() string {
	if x != nil {
		return x.BackImageUrl
	}
	return ""
}

func (x *HomeTabItemMessage) GetItemType() ItemType {
	if x != nil {
		return x.ItemType
	}
	return ItemType_HOMETAB_ITEM_BRANDS
}

func (x *HomeTabItemMessage) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *HomeTabItemMessage) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *HomeTabItemMessage) GetProducts() []*ProductMessage {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *HomeTabItemMessage) GetBrands() []*BrandMessage {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *HomeTabItemMessage) GetExhibitions() []*ExhibitionMessage {
	if x != nil {
		return x.Exhibitions
	}
	return nil
}

func (x *HomeTabItemMessage) GetReference() *HomeTabItemReferenceMessage {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *HomeTabItemMessage) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *HomeTabItemMessage) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

type HomeTabItemReferenceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string           `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Params  string           `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Options []SortingOptions `protobuf:"varint,3,rep,packed,name=options,proto3,enum=goalloff.SortingOptions" json:"options,omitempty"`
}

func (x *HomeTabItemReferenceMessage) Reset() {
	*x = HomeTabItemReferenceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeTabItemReferenceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeTabItemReferenceMessage) ProtoMessage() {}

func (x *HomeTabItemReferenceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeTabItemReferenceMessage.ProtoReflect.Descriptor instead.
func (*HomeTabItemReferenceMessage) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{9}
}

func (x *HomeTabItemReferenceMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HomeTabItemReferenceMessage) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *HomeTabItemReferenceMessage) GetOptions() []SortingOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ItemRequester struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType         ItemType         `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=goalloff.ItemType" json:"item_type,omitempty"`
	BrandKeynames    []string         `protobuf:"bytes,2,rep,name=brand_keynames,json=brandKeynames,proto3" json:"brand_keynames,omitempty"`
	ExhibitionIds    []string         `protobuf:"bytes,3,rep,name=exhibition_ids,json=exhibitionIds,proto3" json:"exhibition_ids,omitempty"`
	AlloffcategoryId *string          `protobuf:"bytes,4,opt,name=alloffcategory_id,json=alloffcategoryId,proto3,oneof" json:"alloffcategory_id,omitempty"`
	Options          []SortingOptions `protobuf:"varint,5,rep,packed,name=options,proto3,enum=goalloff.SortingOptions" json:"options,omitempty"`
	ProductIds       []string         `protobuf:"bytes,6,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
}

func (x *ItemRequester) Reset() {
	*x = ItemRequester{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hometab_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRequester) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRequester) ProtoMessage() {}

func (x *ItemRequester) ProtoReflect() protoreflect.Message {
	mi := &file_hometab_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRequester.ProtoReflect.Descriptor instead.
func (*ItemRequester) Descriptor() ([]byte, []int) {
	return file_hometab_proto_rawDescGZIP(), []int{10}
}

func (x *ItemRequester) GetItemType() ItemType {
	if x != nil {
		return x.ItemType
	}
	return ItemType_HOMETAB_ITEM_BRANDS
}

func (x *ItemRequester) GetBrandKeynames() []string {
	if x != nil {
		return x.BrandKeynames
	}
	return nil
}

func (x *ItemRequester) GetExhibitionIds() []string {
	if x != nil {
		return x.ExhibitionIds
	}
	return nil
}

func (x *ItemRequester) GetAlloffcategoryId() string {
	if x != nil && x.AlloffcategoryId != nil {
		return *x.AlloffcategoryId
	}
	return ""
}

func (x *ItemRequester) GetOptions() []SortingOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ItemRequester) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

var File_hometab_proto protoreflect.FileDescriptor

var file_hometab_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x1a, 0x10, 0x65, 0x78, 0x68, 0x69, 0x62,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xd5, 0x03, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54,
	0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x29, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x61,
	0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x61, 0x6c,
	0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x6c, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x06, 0x69, 0x73,
	0x4c, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x62,
	0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x4a,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66,
	0x66, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66,
	0x66, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x4b, 0x0a, 0x17,
	0x45, 0x64, 0x69, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xab, 0x04, 0x0a, 0x12, 0x48, 0x6f, 0x6d,
	0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61,
	0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x78, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66,
	0x66, 0x2e, 0x45, 0x78, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x22, 0x7d, 0x0a, 0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61,
	0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61,
	0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x78, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x68, 0x69, 0x62, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c,
	0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x2a, 0xc5, 0x01, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x13, 0x48, 0x4f, 0x4d, 0x45, 0x54, 0x41, 0x42, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x42, 0x52, 0x41, 0x4e, 0x44, 0x53, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x48, 0x4f, 0x4d,
	0x45, 0x54, 0x41, 0x42, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x48, 0x49, 0x42, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x4f, 0x4d, 0x45,
	0x54, 0x41, 0x42, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x48, 0x49, 0x42, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x48, 0x4f, 0x4d, 0x45, 0x54, 0x41,
	0x42, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x48, 0x49, 0x42, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x48, 0x4f, 0x4d, 0x45, 0x54, 0x41, 0x42, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x53, 0x5f, 0x42, 0x52, 0x41,
	0x4e, 0x44, 0x53, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x48, 0x4f, 0x4d, 0x45, 0x54, 0x41, 0x42,
	0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x53, 0x5f, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x45, 0x53, 0x10, 0x05, 0x32, 0xf3, 0x02, 0x0a, 0x0b,
	0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x53, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65,
	0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f,
	0x66, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x45,
	0x64, 0x69, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20,
	0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x66, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x61,
	0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67,
	0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x65, 0x73, 0x73, 0x62, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x66,
	0x66, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_hometab_proto_rawDescOnce sync.Once
	file_hometab_proto_rawDescData = file_hometab_proto_rawDesc
)

func file_hometab_proto_rawDescGZIP() []byte {
	file_hometab_proto_rawDescOnce.Do(func() {
		file_hometab_proto_rawDescData = protoimpl.X.CompressGZIP(file_hometab_proto_rawDescData)
	})
	return file_hometab_proto_rawDescData
}

var file_hometab_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hometab_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_hometab_proto_goTypes = []interface{}{
	(ItemType)(0),                       // 0: goalloff.ItemType
	(*GetHomeTabItemRequest)(nil),       // 1: goalloff.GetHomeTabItemRequest
	(*ListHomeTabItemsRequest)(nil),     // 2: goalloff.ListHomeTabItemsRequest
	(*EditHomeTabItemRequest)(nil),      // 3: goalloff.EditHomeTabItemRequest
	(*CreateHomeTabItemRequest)(nil),    // 4: goalloff.CreateHomeTabItemRequest
	(*GetHomeTabItemResponse)(nil),      // 5: goalloff.GetHomeTabItemResponse
	(*ListHomeTabItemsResponse)(nil),    // 6: goalloff.ListHomeTabItemsResponse
	(*EditHomeTabItemResponse)(nil),     // 7: goalloff.EditHomeTabItemResponse
	(*CreateHomeTabItemResponse)(nil),   // 8: goalloff.CreateHomeTabItemResponse
	(*HomeTabItemMessage)(nil),          // 9: goalloff.HomeTabItemMessage
	(*HomeTabItemReferenceMessage)(nil), // 10: goalloff.HomeTabItemReferenceMessage
	(*ItemRequester)(nil),               // 11: goalloff.ItemRequester
	(*ProductMessage)(nil),              // 12: goalloff.ProductMessage
	(*BrandMessage)(nil),                // 13: goalloff.BrandMessage
	(*ExhibitionMessage)(nil),           // 14: goalloff.ExhibitionMessage
	(SortingOptions)(0),                 // 15: goalloff.SortingOptions
}
var file_hometab_proto_depIdxs = []int32{
	11, // 0: goalloff.EditHomeTabItemRequest.contents:type_name -> goalloff.ItemRequester
	11, // 1: goalloff.CreateHomeTabItemRequest.contents:type_name -> goalloff.ItemRequester
	9,  // 2: goalloff.GetHomeTabItemResponse.item:type_name -> goalloff.HomeTabItemMessage
	9,  // 3: goalloff.ListHomeTabItemsResponse.items:type_name -> goalloff.HomeTabItemMessage
	9,  // 4: goalloff.EditHomeTabItemResponse.item:type_name -> goalloff.HomeTabItemMessage
	9,  // 5: goalloff.CreateHomeTabItemResponse.item:type_name -> goalloff.HomeTabItemMessage
	0,  // 6: goalloff.HomeTabItemMessage.item_type:type_name -> goalloff.ItemType
	12, // 7: goalloff.HomeTabItemMessage.products:type_name -> goalloff.ProductMessage
	13, // 8: goalloff.HomeTabItemMessage.brands:type_name -> goalloff.BrandMessage
	14, // 9: goalloff.HomeTabItemMessage.exhibitions:type_name -> goalloff.ExhibitionMessage
	10, // 10: goalloff.HomeTabItemMessage.reference:type_name -> goalloff.HomeTabItemReferenceMessage
	15, // 11: goalloff.HomeTabItemReferenceMessage.options:type_name -> goalloff.SortingOptions
	0,  // 12: goalloff.ItemRequester.item_type:type_name -> goalloff.ItemType
	15, // 13: goalloff.ItemRequester.options:type_name -> goalloff.SortingOptions
	1,  // 14: goalloff.HomeTabItem.GetHomeTabItem:input_type -> goalloff.GetHomeTabItemRequest
	2,  // 15: goalloff.HomeTabItem.ListHomeTabItems:input_type -> goalloff.ListHomeTabItemsRequest
	3,  // 16: goalloff.HomeTabItem.EditHomeTabItem:input_type -> goalloff.EditHomeTabItemRequest
	4,  // 17: goalloff.HomeTabItem.CreateHomeTabItem:input_type -> goalloff.CreateHomeTabItemRequest
	5,  // 18: goalloff.HomeTabItem.GetHomeTabItem:output_type -> goalloff.GetHomeTabItemResponse
	6,  // 19: goalloff.HomeTabItem.ListHomeTabItems:output_type -> goalloff.ListHomeTabItemsResponse
	7,  // 20: goalloff.HomeTabItem.EditHomeTabItem:output_type -> goalloff.EditHomeTabItemResponse
	8,  // 21: goalloff.HomeTabItem.CreateHomeTabItem:output_type -> goalloff.CreateHomeTabItemResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_hometab_proto_init() }
func file_hometab_proto_init() {
	if File_hometab_proto != nil {
		return
	}
	file_exhibition_proto_init()
	file_product_proto_init()
	file_brand_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hometab_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomeTabItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHomeTabItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHomeTabItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHomeTabItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomeTabItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHomeTabItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHomeTabItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHomeTabItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeTabItemMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeTabItemReferenceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hometab_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRequester); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hometab_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_hometab_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_hometab_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hometab_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hometab_proto_goTypes,
		DependencyIndexes: file_hometab_proto_depIdxs,
		EnumInfos:         file_hometab_proto_enumTypes,
		MessageInfos:      file_hometab_proto_msgTypes,
	}.Build()
	File_hometab_proto = out.File
	file_hometab_proto_rawDesc = nil
	file_hometab_proto_goTypes = nil
	file_hometab_proto_depIdxs = nil
}
