# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import productGroup_pb2 as productGroup__pb2


class ProductGroupStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProductGroup = channel.unary_unary(
                '/golang.ProductGroup/GetProductGroup',
                request_serializer=productGroup__pb2.GetProductGroupRequest.SerializeToString,
                response_deserializer=productGroup__pb2.GetProductGroupResponse.FromString,
                )
        self.CreateProductGroup = channel.unary_unary(
                '/golang.ProductGroup/CreateProductGroup',
                request_serializer=productGroup__pb2.CreateProductGroupRequest.SerializeToString,
                response_deserializer=productGroup__pb2.CreateProductGroupResponse.FromString,
                )
        self.ListProductGroups = channel.unary_unary(
                '/golang.ProductGroup/ListProductGroups',
                request_serializer=productGroup__pb2.ListProductGroupsRequest.SerializeToString,
                response_deserializer=productGroup__pb2.ListProductGroupsResponse.FromString,
                )
        self.EditProductGroup = channel.unary_unary(
                '/golang.ProductGroup/EditProductGroup',
                request_serializer=productGroup__pb2.EditProductGroupRequest.SerializeToString,
                response_deserializer=productGroup__pb2.EditProductGroupResponse.FromString,
                )
        self.PushProductsInProductGroup = channel.unary_unary(
                '/golang.ProductGroup/PushProductsInProductGroup',
                request_serializer=productGroup__pb2.ProductInPgRequest.SerializeToString,
                response_deserializer=productGroup__pb2.ProductsInPgResponse.FromString,
                )
        self.UpdateProductsInProductGroup = channel.unary_unary(
                '/golang.ProductGroup/UpdateProductsInProductGroup',
                request_serializer=productGroup__pb2.ProductsInPgRequest.SerializeToString,
                response_deserializer=productGroup__pb2.ProductsInPgResponse.FromString,
                )
        self.RemoveProductInProductGroup = channel.unary_unary(
                '/golang.ProductGroup/RemoveProductInProductGroup',
                request_serializer=productGroup__pb2.RemoveProductInPgRequest.SerializeToString,
                response_deserializer=productGroup__pb2.ProductsInPgResponse.FromString,
                )


class ProductGroupServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProductGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductsInProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductsInProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveProductInProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductGroupServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductGroup,
                    request_deserializer=productGroup__pb2.GetProductGroupRequest.FromString,
                    response_serializer=productGroup__pb2.GetProductGroupResponse.SerializeToString,
            ),
            'CreateProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProductGroup,
                    request_deserializer=productGroup__pb2.CreateProductGroupRequest.FromString,
                    response_serializer=productGroup__pb2.CreateProductGroupResponse.SerializeToString,
            ),
            'ListProductGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProductGroups,
                    request_deserializer=productGroup__pb2.ListProductGroupsRequest.FromString,
                    response_serializer=productGroup__pb2.ListProductGroupsResponse.SerializeToString,
            ),
            'EditProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.EditProductGroup,
                    request_deserializer=productGroup__pb2.EditProductGroupRequest.FromString,
                    response_serializer=productGroup__pb2.EditProductGroupResponse.SerializeToString,
            ),
            'PushProductsInProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductsInProductGroup,
                    request_deserializer=productGroup__pb2.ProductInPgRequest.FromString,
                    response_serializer=productGroup__pb2.ProductsInPgResponse.SerializeToString,
            ),
            'UpdateProductsInProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductsInProductGroup,
                    request_deserializer=productGroup__pb2.ProductsInPgRequest.FromString,
                    response_serializer=productGroup__pb2.ProductsInPgResponse.SerializeToString,
            ),
            'RemoveProductInProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveProductInProductGroup,
                    request_deserializer=productGroup__pb2.RemoveProductInPgRequest.FromString,
                    response_serializer=productGroup__pb2.ProductsInPgResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'golang.ProductGroup', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductGroup(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/GetProductGroup',
            productGroup__pb2.GetProductGroupRequest.SerializeToString,
            productGroup__pb2.GetProductGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/CreateProductGroup',
            productGroup__pb2.CreateProductGroupRequest.SerializeToString,
            productGroup__pb2.CreateProductGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProductGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/ListProductGroups',
            productGroup__pb2.ListProductGroupsRequest.SerializeToString,
            productGroup__pb2.ListProductGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/EditProductGroup',
            productGroup__pb2.EditProductGroupRequest.SerializeToString,
            productGroup__pb2.EditProductGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductsInProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/PushProductsInProductGroup',
            productGroup__pb2.ProductInPgRequest.SerializeToString,
            productGroup__pb2.ProductsInPgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProductsInProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/UpdateProductsInProductGroup',
            productGroup__pb2.ProductsInPgRequest.SerializeToString,
            productGroup__pb2.ProductsInPgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveProductInProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/golang.ProductGroup/RemoveProductInProductGroup',
            productGroup__pb2.RemoveProductInPgRequest.SerializeToString,
            productGroup__pb2.ProductsInPgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
